input {
  # Receives Input from a file
  file {
    # Matches everything that beggins `/home/missao/logstash/logstash/event-data/apache_` and ends with `.log`
    path => "/home/missao/logstash/logstash/event-data/apache_*.log"
    start_position => "beginning"
  }
}
filter {
  mutate {
    replace => { type => "access" }
  }

  grok {
    # Process HTTPD Message splitting the value
    match => { 
      "message" => '%{HTTPD_COMMONLOG} "%{GREEDYDATA:referrer}" "%{GREEDYDATA:agent}"'
    }
  }

  date {
    # Retrieves the metadata timestamp field and set is as the event datetime
    match => [ "[@metadata][timestamp]", "MMM dd, yyyy HH:mm:ss a" ]
  }

  # Checks if an error ocurred on grok filter
  if "_grokparsefailure" in [tags] {
    # If true drops the event
    drop { }
  }

  # Parses the user agent
  useragent {
    source => "agent"
    target => "user_agent"
    remove_field => ["agent"]
  }

  # Removes Requests to Admin Pages
  if [request] =~ /^\/admin\// {
    drop { }
  }

  # Removes Requests to Static Files
  if [request] =~ /^\/js\// 
    or [request] =~ /^\/css\//
    or [request] in ["/robots.txt", "/favicon.ico"]{
    drop { }
  }

  # Removes Crawlers Requests
  if [user_agent][device] == "Spider" {
    drop { }
  }

  mutate {
    # Converts the string values to integer
    convert => {
      "response" => "integer"
      "bytes" => "integer"
    }
  }

  # Passing dates from fields, and then using that date or timestamp as logstash timestamp
  date {
    match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
    # Common options are supported by all filters
    remove_field => ["timestamp"]
  }

  # Enriches data getting location information using the ip address
  geoip {
    source => "clientip"
    fields => ["country_name", "city_name", "location"]
  }

  # Remove unnecessary fields
  mutate {
    remove_field => ["headers", "@version", "host"]
  }
}

output {
  elasticsearch {
    hosts => [ "https://<cluster-host>:<cluster-port>" ]
    cloud_auth => "<user>:<password>"
    index => "logstash-%{type}-%{+YYYY-MM-dd}"
    http_compression => true
  }
}
