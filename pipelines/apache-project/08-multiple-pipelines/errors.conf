input {
  # Receives a input from an error file
  file {
    path => "/home/missao/logstash/logstash/event-data/java_errors.log"
    start_position => "beginning"
    # Allows to handle multilines events like stacktrace
    codec => multiline {
      # The pattern matches the first line of a multiline event using Grok pattern
      pattern => "^%{CATALINA_DATESTAMP}"
      # Tells codec that every line that does not match the pattern should be grouped in the same event
      negate => true
      what => previous
      auto_flush_interval => 5
    }
  }
}
filter {
  mutate {
    replace => { type => "error" }
  }

  # Uses Grok to retrieve information in the stacktrace
  grok {
    # extracts: datetime, loglevel, javaclass and the error message using a regex
    # Also, it saves the timestamp on metadata, in this way this field is not sent to the output filter
    match => {
      message => "%{CATALINA_DATESTAMP:[@metadata][timestamp]} %{LOGLEVEL:level} %{JAVACLASS:class}: (?<msg>.+?(?=(\r\n|\r|\n)))"
    }
  }
}

output {
  stdout {
    codec => rubydebug {
      # Prints the metadata field on stdout
      metadata => true
    }
  }
}
